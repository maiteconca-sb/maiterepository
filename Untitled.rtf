d{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
# Find the shortest flight from PDX in terms of distance\
flights.filter(flights.origin == "PDX").groupBy().min("distance").show()\
\
# Find the longest flight from SEA in terms of air time\
# Change something in here 
flights.filter(flights.origin == "SEA").groupBy().max("air_time").show()\
\
# More than 1 filter \
flights.filter(flights.carrier == "DL").filter(flights.origin == "SEA").groupBy().avg("air_time").show()\
\
# Mutate a column and then do a computation \
flights.withColumn("duration_hrs", flights.air_time/60).groupBy().sum("duration_hrs").show()\
\
# Group by origin\
by_origin = flights.groupBy("origin")\
}
